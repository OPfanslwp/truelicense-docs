(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{373:function(e,a,n){"use strict";n.r(a);var t=n(44),r=Object(t.a)({},(function(){var e=this,a=e.$createElement,n=e._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"using-the-cli"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#using-the-cli"}},[e._v("#")]),e._v(" Using The CLI")]),e._v(" "),n("p",[e._v("Your generated project provides an internationalized Command Line Interface (CLI) for the Key Generator and the Key\nManager modules.\nThe CLI gets implemented in the main classes "),n("code",[e._v("${package}.keygen.Main")]),e._v(" and "),n("code",[e._v("${package}.keymgr.Main")]),e._v(", respectively.")]),e._v(" "),n("h2",{attrs:{id:"using-the-key-generator-cli"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#using-the-key-generator-cli"}},[e._v("#")]),e._v(" Using The Key Generator CLI")]),e._v(" "),n("h3",{attrs:{id:"overview"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),n("p",[e._v("If you run the standalone JAR of the Key Generator module without parameters, it prints usage instructions:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ java -jar keygen/target/*-keygen-*-standalone.jar\nUsage:\n\n\tMain <command> [<options>] [<parameters>]\n\nwhere <command> is one of (case is ignored):\n\n\thelp\t\tprint usage instructions for a command\n\tversion\t\tprint version information\n\tgenerate\tgenerates a license key\n\n")])])]),n("p",[e._v("You can get help for a particular command by using the "),n("code",[e._v("help")]),e._v(" command.\nThese are the usage instructions for the "),n("code",[e._v("generate")]),e._v(" command:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ java -jar keygen/target/*-keygen-*-standalone.jar help generate\nUsage:\n\n\tgenerate [[-key]  <license-key-path>   ] |\n\t         [-input  <input-license-path> ] |\n\t         [-output <output-license-path>] |\n\t         [-edition <edition>] |\n\t         [-verbose <boolean>]\n\nGenerates a license key and prints its license bean to standard output. If a\n<license-key-path> is specified, then the generated license key gets saved to\nthe file identified by this path.\n\nIf an <input-license-path> is specified, then the license bean gets decoded\nfrom the file identified by this path and transformed into the license key.\nSpecifying a dash (-) causes the standard input stream to be used instead of a\nfile. If no <input-license-path> is specified, then a default license bean gets\ncreated and transformed into the license key.\n\nIf an <output-license-path> is specified, then the license bean gets encoded to\nthe file identified by this path for subsequent editing and input to this\ncommand. Specifying a dash (-) causes the standard output stream to be used\ninstead of a file.\n\nIf more than edition has been configured in the licensing schema, then a\n<edition> must be specified on the command line.\n\nBy default, this command does not write debugging information to the standard\nerror stream. You can override the default behavior by specifying\n`-verbose true` or `-verbose false`.\n")])])]),n("h3",{attrs:{id:"generating-a-license-key"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#generating-a-license-key"}},[e._v("#")]),e._v(" Generating A License Key")]),e._v(" "),n("h4",{attrs:{id:"using-default-properties"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#using-default-properties"}},[e._v("#")]),e._v(" Using Default Properties")]),e._v(" "),n("p",[e._v("You can generate a license key with default properties as follows:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('$ java -jar keygen/target/*-keygen-*-standalone.jar generate product.lic -verbose true\nglobal.namespace.truelicense.v4.V4License@ce3c1e26[subject="StarGazer 2020", holder="CN=Unknown", issuer="CN=Company Inc.", issued=Sat May 23 18:46:11 CEST 2020, notBefore=null, notAfter=null, consumerType="User", consumerAmount=1, info=null]\n')])])]),n("p",[e._v("This command creates and initializes a new license bean, encodes it into a license key and writes the result into the\nfile "),n("code",[e._v("product.lic")]),e._v(".")]),e._v(" "),n("p",[e._v("If the property "),n("code",[e._v("${verboseCli}")]),e._v(" is set to "),n("code",[e._v("true")]),e._v(" when generating your project, then a brief representation of the\nencoded license bean gets printed to the standard error stream by default.\nYou can override this by specifying "),n("code",[e._v("-verbose true")]),e._v(" or "),n("code",[e._v("-version false")]),e._v(".")]),e._v(" "),n("h4",{attrs:{id:"supporting-multiple-editions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#supporting-multiple-editions"}},[e._v("#")]),e._v(" Supporting Multiple Editions")]),e._v(" "),n("p",[e._v("If your software product requires supporting multiple editions, then you need to specify the "),n("code",[e._v("-edition")]),e._v(" option on the\ncommand line.\nFor example, you can generate a license key for an edition named "),n("code",[e._v("standard")]),e._v(" like this:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('$ java -jar keygen/target/*-keygen-*-standalone.jar generate product.lic -verbose true -edition standard\nglobal.namespace.truelicense.v4.V4License@9628f7d5[subject="StarGazer 2020", holder="CN=Unknown", issuer="CN=Company Inc.", issued=Sat May 23 18:49:29 CEST 2020, notBefore=null, notAfter=null, consumerType="User", consumerAmount=1, info=null]\n')])])]),n("p",[e._v("For brevity, only one edition is assumed in the remainder of this page, so this option is not specified again.")]),e._v(" "),n("h4",{attrs:{id:"property-input"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#property-input"}},[e._v("#")]),e._v(" Property Input")]),e._v(" "),n("p",[e._v("You can specify the "),n("code",[e._v("-input")]),e._v(" parameter in order to read a template license bean from a file or the standard input\nstream.\nThe input syntax needs to conform to the configured license key format.\nFor example, if the license key format is V4, then you can decode a license bean with the "),n("code",[e._v("holder")]),e._v(" and "),n("code",[e._v("term")]),e._v("\nproperties from the standard input stream in JSON format and generate a V4 license key from it like this:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('$ echo \'{ "holder": "CN=Christian Schlichtherle", "term": 365 }\' | \\\n    java -jar keygen/target/*-keygen-*-standalone.jar generate product.lic -verbose true -input -\nglobal.namespace.truelicense.v4.V4License@752005ff[subject="StarGazer 2020", holder="CN=Christian Schlichtherle", issuer="CN=Company Inc.", issued=Sat May 23 18:55:08 CEST 2020, notBefore=Sat May 23 18:55:08 CEST 2020, notAfter=Sun May 23 18:55:08 CEST 2021, consumerType="User", consumerAmount=1, info=null]\n')])])]),n("p",[e._v("Please refer to the Javadoc for the interface "),n("code",[e._v("global.namespace.truelicense.api.License")]),e._v(" for a list of all properties.")]),e._v(" "),n("h4",{attrs:{id:"property-output"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#property-output"}},[e._v("#")]),e._v(" Property Output")]),e._v(" "),n("p",[e._v("You can specify the "),n("code",[e._v("-output")]),e._v(" parameter in order to write the encoded license bean to a file or the standard output\nstream.\nThe output syntax conforms to the configured license key format.\nFor example, if the license key format is V4, then you can decode a license bean with the "),n("code",[e._v("issuer")]),e._v(" property from\nthe standard input stream in JSON format, generate a V4 license key from it and print the encoded license bean to\nthe standard output stream like this:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('$ echo \'{ "issuer": "CN=Christian Schlichtherle" }\' | \\\n    java -jar keygen/target/*-keygen-*-standalone.jar generate product.lic -verbose false -input - -output -\n{"consumerAmount":1,"consumerType":"User","holder":"CN=Unknown","issued":1590253080694,"issuer":"CN=Christian Schlichtherle","subject":"StarGazer 2020"}\n')])])]),n("h4",{attrs:{id:"custom-properties"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#custom-properties"}},[e._v("#")]),e._v(" Custom Properties")]),e._v(" "),n("p",[e._v("Besides the predefined properties, you can also store custom properties in a license bean.\nTo facilitate this, the "),n("code",[e._v("License")]),e._v(" interface defines a property with the name "),n("code",[e._v("extra")]),e._v(" and the type "),n("code",[e._v("java.lang.Object")]),e._v(".\nTo store an object into this property, its type needs to be supported by the codec of the respective license key format,\ni.e. JSON or XML.\nBoth codecs support "),n("code",[e._v("java.util.Map")]),e._v(" without customization.\nFor example, if the license key format is V4, then you can provide a map with the custom properties named "),n("code",[e._v("foo")]),e._v(" and\n"),n("code",[e._v("bar")]),e._v(" like this:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('$ echo \'{ "extra": { "foo": 1, "bar": "baz" } }\' | \\\n    java -jar keygen/target/*-keygen-*-standalone.jar generate product.lic -verbose false -input - -output -\n{"consumerAmount":1,"consumerType":"User","extra":{"foo":1,"bar":"baz"},"holder":"CN=Unknown","issued":1590253228724,"issuer":"CN=Company Inc.","subject":"StarGazer 2020"}\n')])])]),n("p",[e._v("TrueLicense never discloses the property "),n("code",[e._v("extra")]),e._v(" to users, so you can store any private information in it.\nIf you want to share some additional information with the user, then you can use the property with the name "),n("code",[e._v("info")]),e._v(" and\nthe type "),n("code",[e._v("java.lang.String")]),e._v(" instead.")]),e._v(" "),n("h2",{attrs:{id:"using-the-key-manager-cli"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#using-the-key-manager-cli"}},[e._v("#")]),e._v(" Using The Key Manager CLI")]),e._v(" "),n("h3",{attrs:{id:"overview-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#overview-2"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),n("p",[e._v("Just like the standalone JAR of the Key Generator module, if you run the guarded JAR or the standalone JAR of the Key\nManager module without parameters, it prints usage instructions:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ java -jar keymgr/target/*-keymgr-*-guarded.jar\nUsage:\n\n\tMain <command> [<options>] [<parameters>]\n\nwhere <command> is one of (case is ignored):\n\n\thelp\t\tprint usage instructions for a command\n\tversion\t\tprint version information\n\tinstall\t\tinstalls a license key\n\tload\t\tloads and prints the installed license key\n\tverify\t\tverifies the installed license key\n\tuninstall\tUninstalls the license key\n\twizard\t\tstarts the licensing wizard\n\n")])])]),n("p",[e._v("You can get help for a particular command by using the "),n("code",[e._v("help")]),e._v(" command.\nThese are the usage instructions for the "),n("code",[e._v("install")]),e._v(" command:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ java -jar keymgr/target/*-keymgr-*-guarded.jar help install\nUsage:\n\n\tinstall <license-key-path>\n\nLoads and installs the regular license key from the file identified by\n<license-key-path>.\n")])])]),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),n("p",[e._v("The following examples use the "),n("code",[e._v("keymgr-*-standalone.jar")]),e._v(", i.e. the unobfuscated JAR to produce readable output.\nTry these commands with the "),n("code",[e._v("keymgr-*-guarded.jar")]),e._v(" and notice the difference for yourself.")])]),e._v(" "),n("h3",{attrs:{id:"installing-a-license-key"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#installing-a-license-key"}},[e._v("#")]),e._v(" Installing A License Key")]),e._v(" "),n("p",[e._v("You can install a license key as follows:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ java -jar keymgr/target/*-keymgr-*-standalone.jar install product.lic\n")])])]),n("p",[e._v("Note that there is no output unless there is an error, in which case an exception gets printed.")]),e._v(" "),n("h3",{attrs:{id:"loading-the-license-key"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#loading-the-license-key"}},[e._v("#")]),e._v(" Loading The License Key")]),e._v(" "),n("p",[e._v("You can load the installed license key as follows:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('$ java -jar keymgr/target/*-keymgr-*-standalone.jar load\nglobal.namespace.truelicense.v4.V4License@9a7e2266[subject="StarGazer 2020", holder="CN=Unknown", issuer="CN=Company Inc.", issued=Sat May 23 19:00:28 CEST 2020, notBefore=null, notAfter=null, consumerType="User", consumerAmount=1, info=null]\n')])])]),n("p",[e._v("A brief representation of the encoded license bean gets written to the standard output stream.")]),e._v(" "),n("p",[e._v("If no license key is installed, then a "),n("code",[e._v("global.namespace.truelicense.api.LicenseManagementException")]),e._v(" gets thrown instead")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('$ java -jar keymgr/target/*-keymgr-*-standalone.jar load\nglobal.namespace.truelicense.api.LicenseManagementException: global.namespace.fun.io.api.NoContentException: Cannot locate the key "StarGazer 2020" in the user preferences node for the absolute path "/com/company/product/keymgr".\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext.callChecked(TrueLicenseManagementContext.java:83)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext.access$800(TrueLicenseManagementContext.java:37)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$TrueLicenseManager.load(TrueLicenseManagementContext.java:758)\n\tat com.company.product.keymgr.LicenseManager.load(LicenseManager.java:94)\n\tat com.company.product.keymgr.Main$5.run(Main.java:54)\n\tat com.company.product.keymgr.Main.process(Main.java:120)\n\tat com.company.product.keymgr.Main.processAndHandleExceptions(Main.java:102)\n\tat com.company.product.keymgr.Main.main(Main.java:96)\nCaused by: global.namespace.fun.io.api.NoContentException: Cannot locate the key "StarGazer 2020" in the user preferences node for the absolute path "/com/company/product/keymgr".\n\tat global.namespace.fun.io.bios.PreferencesStore.content(PreferencesStore.java:80)\n\tat global.namespace.fun.io.api.Store.content(Store.java:76)\n\tat global.namespace.fun.io.bios.PreferencesStore.lambda$input$0(PreferencesStore.java:43)\n\tat global.namespace.fun.io.api.Socket.lambda$map$0(Socket.java:136)\n\tat global.namespace.fun.io.api.Socket.lambda$map$0(Socket.java:136)\n\tat global.namespace.fun.io.api.Socket.lambda$map$0(Socket.java:136)\n\tat global.namespace.fun.io.api.Socket.lambda$map$0(Socket.java:136)\n\tat global.namespace.truelicense.core.Filters$1.lambda$input$1(Filters.java:51)\n\tat global.namespace.fun.io.api.Socket.apply(Socket.java:123)\n\tat global.namespace.fun.io.jackson.JsonCodec$1.decode(JsonCodec.java:44)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$TrueLicenseManager.repositoryModel(TrueLicenseManagementContext.java:810)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$TrueLicenseManager.repositoryController(TrueLicenseManagementContext.java:804)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$TrueLicenseManager.authenticate(TrueLicenseManagementContext.java:800)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$CachingLicenseManager.authenticate(TrueLicenseManagementContext.java:673)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$TrueLicenseManager.decodeLicense(TrueLicenseManagementContext.java:796)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$TrueLicenseManager.lambda$load$2(TrueLicenseManagementContext.java:760)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext.callChecked(TrueLicenseManagementContext.java:79)\n\t... 7 more\n')])])]),n("h3",{attrs:{id:"verifying-the-license-key"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#verifying-the-license-key"}},[e._v("#")]),e._v(" Verifying The License Key")]),e._v(" "),n("p",[e._v("You can verify the installed license key using:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ java -jar keymgr/target/*-keymgr-*-standalone.jar verify\n")])])]),n("p",[e._v("Note that there is no output in case of success.\nIf no license key is installed however, then a "),n("code",[e._v("global.namespace.truelicense.api.LicenseManagementException")]),e._v(" gets thrown\ninstead:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('$ java -jar keymgr/target/*-keymgr-*-standalone.jar verify\nglobal.namespace.truelicense.api.LicenseManagementException: global.namespace.fun.io.api.NoContentException: Cannot locate the key "StarGazer 2020" in the user preferences node for the absolute path "/com/company/product/keymgr".\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext.callChecked(TrueLicenseManagementContext.java:83)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext.access$800(TrueLicenseManagementContext.java:37)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$TrueLicenseManager.verify(TrueLicenseManagementContext.java:766)\n\tat com.company.product.keymgr.LicenseManager.verify(LicenseManager.java:99)\n\tat com.company.product.keymgr.Main$6.run(Main.java:59)\n\tat com.company.product.keymgr.Main.process(Main.java:120)\n\tat com.company.product.keymgr.Main.processAndHandleExceptions(Main.java:102)\n\tat com.company.product.keymgr.Main.main(Main.java:96)\nCaused by: global.namespace.fun.io.api.NoContentException: Cannot locate the key "StarGazer 2020" in the user preferences node for the absolute path "/com/company/product/keymgr".\n\tat global.namespace.fun.io.bios.PreferencesStore.content(PreferencesStore.java:80)\n\tat global.namespace.fun.io.api.Store.content(Store.java:76)\n\tat global.namespace.fun.io.bios.PreferencesStore.lambda$input$0(PreferencesStore.java:43)\n\tat global.namespace.fun.io.api.Socket.lambda$map$0(Socket.java:136)\n\tat global.namespace.fun.io.api.Socket.lambda$map$0(Socket.java:136)\n\tat global.namespace.fun.io.api.Socket.lambda$map$0(Socket.java:136)\n\tat global.namespace.fun.io.api.Socket.lambda$map$0(Socket.java:136)\n\tat global.namespace.truelicense.core.Filters$1.lambda$input$1(Filters.java:51)\n\tat global.namespace.fun.io.api.Socket.apply(Socket.java:123)\n\tat global.namespace.fun.io.jackson.JsonCodec$1.decode(JsonCodec.java:44)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$TrueLicenseManager.repositoryModel(TrueLicenseManagementContext.java:810)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$TrueLicenseManager.repositoryController(TrueLicenseManagementContext.java:804)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$TrueLicenseManager.authenticate(TrueLicenseManagementContext.java:800)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$CachingLicenseManager.authenticate(TrueLicenseManagementContext.java:673)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$TrueLicenseManager.decodeLicense(TrueLicenseManagementContext.java:796)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$CachingLicenseManager.validate(TrueLicenseManagementContext.java:662)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$TrueLicenseManager.lambda$verify$3(TrueLicenseManagementContext.java:768)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext.callChecked(TrueLicenseManagementContext.java:79)\n\t... 7 more\n')])])]),n("p",[e._v("If a license key is installed, but the encoded license bean is invalid, then a\n"),n("code",[e._v("global.namespace.truelicense.api.LicenseValidationException")]),e._v(" gets thrown instead:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ java -jar keymgr/target/*-keymgr-*-standalone.jar verify\nglobal.namespace.truelicense.api.LicenseValidationException: License validity period has expired at Sunday, 17 May 2020 19:31:26 Central European Summer Time.\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseValidation.validate(TrueLicenseManagementContext.java:908)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$CachingLicenseManager.validate(TrueLicenseManagementContext.java:665)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$TrueLicenseManager.lambda$verify$3(TrueLicenseManagementContext.java:768)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext.callChecked(TrueLicenseManagementContext.java:79)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext.access$800(TrueLicenseManagementContext.java:37)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$TrueLicenseManager.verify(TrueLicenseManagementContext.java:766)\n\tat com.company.product.keymgr.LicenseManager.verify(LicenseManager.java:99)\n\tat com.company.product.keymgr.Main$6.run(Main.java:59)\n\tat com.company.product.keymgr.Main.process(Main.java:120)\n\tat com.company.product.keymgr.Main.processAndHandleExceptions(Main.java:102)\n\tat com.company.product.keymgr.Main.main(Main.java:96)\n")])])]),n("h3",{attrs:{id:"uninstalling-the-license-key"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#uninstalling-the-license-key"}},[e._v("#")]),e._v(" Uninstalling The License Key")]),e._v(" "),n("p",[e._v("You can uninstall the license key using:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ java -jar keymgr/target/*-keymgr-*-standalone.jar uninstall\n")])])]),n("p",[e._v("Note that there is no output unless there is an error, in which case an exception gets printed.")]),e._v(" "),n("p",[e._v("If no license key is installed or only an auto-generated FTP license key is installed, then a\n"),n("code",[e._v("global.namespace.truelicense.api.LicenseManagementException")]),e._v(" gets thrown instead:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('$ java -jar *-keymgr/target/*-keymgr-*-standalone.jar uninstall\nglobal.namespace.truelicense.api.LicenseManagementException: global.namespace.fun.io.api.NoContentException: Cannot locate the key "StarGazer 2020" in the user preferences node for the absolute path "/com/company/product/keymgr".\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext.callChecked(TrueLicenseManagementContext.java:83)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext.access$800(TrueLicenseManagementContext.java:37)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$TrueLicenseManager.uninstall(TrueLicenseManagementContext.java:775)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$CachingLicenseManager.uninstall(TrueLicenseManagementContext.java:651)\n\tat com.company.product.keymgr.LicenseManager.uninstall(LicenseManager.java:104)\n\tat com.company.product.keymgr.Main$7.run(Main.java:64)\n\tat com.company.product.keymgr.Main.process(Main.java:120)\n\tat com.company.product.keymgr.Main.processAndHandleExceptions(Main.java:102)\n\tat com.company.product.keymgr.Main.main(Main.java:96)\nCaused by: global.namespace.fun.io.api.NoContentException: Cannot locate the key "StarGazer 2020" in the user preferences node for the absolute path "/com/company/product/keymgr".\n\tat global.namespace.fun.io.bios.PreferencesStore.content(PreferencesStore.java:80)\n\tat global.namespace.fun.io.api.Store.content(Store.java:76)\n\tat global.namespace.fun.io.bios.PreferencesStore.lambda$input$0(PreferencesStore.java:43)\n\tat global.namespace.fun.io.api.Socket.lambda$map$0(Socket.java:136)\n\tat global.namespace.fun.io.api.Socket.lambda$map$0(Socket.java:136)\n\tat global.namespace.fun.io.api.Socket.lambda$map$0(Socket.java:136)\n\tat global.namespace.fun.io.api.Socket.lambda$map$0(Socket.java:136)\n\tat global.namespace.truelicense.core.Filters$1.lambda$input$1(Filters.java:51)\n\tat global.namespace.fun.io.api.Socket.apply(Socket.java:123)\n\tat global.namespace.fun.io.jackson.JsonCodec$1.decode(JsonCodec.java:44)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$TrueLicenseManager.repositoryModel(TrueLicenseManagementContext.java:810)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$TrueLicenseManager.repositoryController(TrueLicenseManagementContext.java:804)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$TrueLicenseManager.authenticate(TrueLicenseManagementContext.java:800)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$CachingLicenseManager.authenticate(TrueLicenseManagementContext.java:673)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext$TrueLicenseManagerParameters$TrueLicenseManager.lambda$uninstall$4(TrueLicenseManagementContext.java:781)\n\tat global.namespace.truelicense.core.TrueLicenseManagementContext.callChecked(TrueLicenseManagementContext.java:79)\n\t... 8 more\n')])])])])}),[],!1,null,null,null);a.default=r.exports}}]);